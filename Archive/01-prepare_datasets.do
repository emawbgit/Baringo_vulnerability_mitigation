qui cd "${gsdTemp}"
qui spshape2dta "${gsdDataRaw}\household_count_wb_2016/sublocations_baringo.shp", replace //sublocations

**# Process DEM (sublocation-level average elevation values)
qui import delimited "G:\My Drive\earthengine\kenya\baringo work/Baringo_dem_bysublocation.csv", clear
duplicates drop objectid_1,force
rename mean elevation
lab var elevation "Sublocation average elevation"
qui save "${gsdTemp}/dem.dta", replace 

**# Process census 2019 household level data
*1) Retrieve sublocation variable for linking census data and shapefile
use "${gsdDataRaw}\census 2019/Baringo 2019TenPercent_Population and Household Modules.dta", clear 
duplicates drop COUNTY subcounty_code divisionname_code locationname_code sublocation_code EA STRNUMBER HHNUMBER, force
qui export excel COUNTY subcounty_code divisionname_code locationname_code sublocation_code EA STRNUMBER HHNUMBER LISTING_GPS_LATITUDE LISTING_GPS_LONGITUDE using "${gsdTemp}\hh_census2019.xls", firstrow(variables) nolabel replace
qui cd "${gsdTemp}"
qui spshape2dta "${gsdDataRaw}\census 2019/hh_2019_census_sublocationinfo.shp", replace //sublocations
use "${gsdTemp}/hh_2019_census_sublocationinfo.dta", clear 
rename (OBJECTID_1 subcounty_ divisionna locationna sublocatio) (objectid_1 subcounty_code divisionname_code locationname_code sublocation_code)
tempfile hh_2019_census_sublocationinfo
qui save `hh_2019_census_sublocationinfo', replace
use "${gsdDataRaw}\census 2019/Baringo 2019TenPercent_Population and Household Modules.dta", clear 
merge m:1 subcounty_code divisionname_code locationname_code sublocation_code EA STRNUMBER HHNUMBER using `hh_2019_census_sublocationinfo', keepusing(objectid_1) keep(3) nogen
egen hhid=group(subcounty_code divisionname_code locationname_code sublocation_code EA STRNUMBER HHNUMBER)
merge m:1 objectid_1 using "${gsdTemp}/popvars.dta", nogen keep(3) keepusing(area_sqkm) //population density variables 

*2) Construct socio-economic variables 

*Population count by sublocation
bys objectid_1: egen tot_population_bysl=count(objectid_1)

*Dependency ratio 
gen below15=(P12>=0 & P12<15)
gen above65=(P12>=65) & !mi(P12)
gen between_15_64=(P12>=15 & P12<65) 
bys hhid: egen totbelow15=total(below15)
bys hhid: egen totbetween_15_64=total(between_15_64)
bys hhid: egen totabove65=total(above65)
bys hhid: gen tot_hh_members=_N
gen hh_depshare=((totbelow15+totabove65)/tot_hh_members)
lab var hh_depshare "Household share of dependent people"
*Household head is female
gen hhh_female=P10==1 & P11==2
*Household head is employed 
gen hhh_employed=!mi(P50) & P10==1
*Education level
recode P46A (1 3 7 9 =1) (4 =2) (5 6= 3), gen(education)
*Use of telcom score
egen telcom_score=rowtotal(P55 P57 P58)
replace telcom_score=0 if telcom_score>3
*Asset index 
foreach v of varlist H39_1 H39_2 H39_3 H39_4 H39_5 H39_6 H39_7 H39_8 H39_9 H39_10 H39_11 H39_12 H39_13 H39_14 H39_15 H39_16 H39_17 H39_18 H39_19 {
	replace `v'=0 if `v'==2
}
pca H39_1 H39_2 H39_3 H39_4 H39_5 H39_6 H39_7 H39_8 H39_9 H39_10 H39_11 H39_12 H39_13 H39_14 H39_15 H39_16 H39_17 H39_18 H39_19, components(3)
predict asset_index_pca, score
norm asset_index_pca,method(mmx)
*N. cattle owned 
egen number_cattle=rowtotal(H26_1A H26_2A H26_3A H26_4A H26_5A H26_6A H26_7A H26_8A H26_9A H26_10A H26_11A H26_12 H26_12A H26_15A H30)
*Dwelling characterisctics 
//Roof 
recode H30 (2 3 4 12 =1) (5 6 7 =2) (8 9 10 19 11 12= 3), gen(roof)
fre roof
//Wall
recode H31 (2 3 4 16 =1) (5 6 7 8 9 10 =2) (11 12 13 14 15 17= 3), gen(wall)
fre wall
//Floor
recode H32 (1 2 3 =1) (4 5 6 =2) (7 8 9= 3), gen(floor)
fre floor
//Drinking water source 
recode H33 (1 2 3 4 6 8=1) (5 7 9 13 15=2) (10 11 12 14= 3), gen(drinkwatersource)
fre drinkwatersource
//Toilet type 
recode H34 (8 1 6 3 7=1) (2 5 4 =2) (9= 3), gen(toilettype)
fre toilettype
//Type of cooking fuel
recode H37 (5 6=1) (2 7 =2) (3 4 1= 3), gen(cookingfuel)
fre cookingfuel
//Type of lighting fuel 
recode H38 (10 6 =1) (2 3 4 5 7 8 9 11 13 =2) (1= 3), gen(lightingfuel)
fre lightingfuel

*3) Collapse dataset at household level
keep if P10==1
duplicates drop hhid,force

*4) Development score 
foreach v of varlist education H28 telcom_score number_cattle roof wall floor drinkwatersource toilettype cookingfuel lightingfuel CENSUS_WEALTH_QUINTILE {
	norm `v',method(mmx)
}
replace hh_depshare=1/hh_depshare
pca hh_depshare hhh_employed asset_index_pca mmx_*, components(4)
predict hdi_pca, score
norm hdi_pca,method(mmx)
replace hh_depshare=1/hh_depshare

*Population density by sublocation
gen population_density_bysl=tot_population_bysl/area_sqkm

*5) Collapse indicators at sublocation level
collapse hh_depshare hhh_employed mmx_* population_density_bysl hhh_female, by(objectid_1)
count 

**# Include roads density and include it in the sublocation-level dataset 
preserve 
qui import excel "${gsdDataRaw}\roads_density.xlsx", sheet("Sheet1") firstrow clear
renvars *, lower
lab var roadkm_km2 "Road density (km/km2)"
tempfile roads_density
qui save `roads_density', replace
restore 
merge 1:1 objectid_1 using `roads_density', keepusing(roadkm_km2 shape_area)  nogen keep(1 3)
count

**# Run PCA to get the social vulnerability index
rename mmx_CENSUS_WEALTH_QUINTILE wealth_qtile
renvars mmx_*,pres(mmx_ )
replace hdi_pca=1/hdi_pca
foreach v of varlist hhh_female population_density_bysl hdi_pca roadkm_km2 {
	norm `v',method(mmx)
}
pca mmx_*, components(1)
predict svi_pca, score
norm svi_pca,method(mmx)

qui save "${gsdTemp}/socioeconomic.dta", replace 

**# Process rainfall variables 
qui import delimited "G:\My Drive\earthengine\kenya\baringo work\Baringo_subloc_chirps_199001202309.csv", clear 
tostring imageid,gen(dates)
*Manipulate date to make it handy for calculations 
gen month_year=substr(dates,1,6)
gen year=substr(month_year,1,4)
gen month=substr(month_year,5,2)
gen day=substr(dates,7,2)
qui destring year,replace
qui destring month,replace
qui destring day,replace
gen yearsofinterest=inlist(year,2016,2017,2018,2019,2020,2021,2022) //years of interest
gen rainyseason=inlist(month,3,4,5) //define rainy season (March through May)
sort objectid_1 year month day
**Goal is identifying how many times, within a sublocation, a significantly higher total rainfall amount (wrt long term average) occurred
bys objectid_1 year: egen totrain_rs_lt=total(mean) if yearsofinterest==0 & rainyseason==1 //total rain during rainy season (use years for the long term average). for each year and sublocation add up rains from each day belonging to each rainy month

collapse (first) rainyseason (first) year (first) month (first) yearsofinterest (sum) sum_totrain_month=mean,by(objectid_1 month_year) //get total rain
keep if rainyseason==1 //only retain rainy season months 
collapse (first) yearsofinterest (sum) sum_totrain_rs=sum_totrain_month,by(objectid_1 year)
bys objectid_1: egen avg_totprec_rs_lt=mean(sum_totrain_rs) if yearsofinterest==0 //for each sublocation, get the long term average total rainfall during the rainy season
bys objectid_1: egen sd_totprec_rs_lt=sd(sum_totrain_rs) if yearsofinterest==0 //for each sublocation, get the long term sd total rainfall during the rainy season

bys objectid_1: egen lt_avg_totprec_rs=max(avg_totprec_rs_lt) //for comparison sake, impute the average from long term years into years of interest
bys objectid_1: egen lt_sd_totprec_rs=max(sd_totprec_rs_lt) //for comparison sake, impute the sd from long term years into years of interest
keep if yearsofinterest==1 //only keep years of interest (2016 through 2022)
drop avg_totprec_rs_lt sd_totprec_rs_lt yearsofinterest //drop intermediate vars
gen sign_high_totprec_rs=sum_totrain_rs>lt_avg_totprec_rs+(1.96* lt_sd_totprec_rs) //identify significantly higher rain amount (>long term average+1.95sd)
lab var sign_high_totprec_rs "Significantly higher total rainfall during  main rainy season (pv=95%)"
collapse (sum) n_sign_high_totprec_rs=sign_high_totprec_rs,by(objectid_1) //count number of such episodes within each sublocation
lab var n_sign_high_totprec_rs "Nb major rainy seasons with tot prec sig. higher than long term average"
qui save "${gsdTemp}/rain_shocks.dta", replace 

**# Get number of permanent water pixels for each sublocation. (Cfr JRC dataset - analyzed in Google Earth Engine: https://developers.google.com/earth-engine/datasets/catalog/JRC_GSW1_4_GlobalSurfaceWater . Link: https://code.earthengine.google.com/70407ad9793ed6c1684011b8d7833c02)
qui import delimited "G:\My Drive\earthengine\kenya\baringo work\Count_newpermwater_pxls_jrc.csv", clear
gen new_perm_water_area=(count_newpermwater_pxls*900)/1000000
br count_newpermwater_pxls new_perm_water_area shape_area
gen new_perm_water_area_share=new_perm_water_area/shape_area
qui save "${gsdTemp}/new_permanentwater.dta", replace 

**# Process land cover change variables
//2015-16
qui import delimited "G:\My Drive\earthengine\kenya\baringo work\class_area_by_sublocations_baringo_201516.csv", clear 
renvars water- snow_and_ice,postf(_2015)
tempfile landcover_2015
qui save `landcover_2015', replace 
//2021-22
qui import delimited "G:\My Drive\earthengine\kenya\baringo work\class_area_by_sublocations_baringo_202122.csv", clear 
renvars water- snow_and_ice,postf(_2021)
merge 1:1 objectid_1 using `landcover_2015', keep(3) assert(3) nogen
local classes water trees grass flooded_vegetation crops shrub_and_scrub built bare snow_and_ice
foreach c of local classes {
	qui replace `c'_2015=0 if mi(`c'_2015)
	qui replace `c'_2021=0 if mi(`c'_2021)
	qui gen perc_var_`c'=((`c'_2021/`c'_2015)-1)*100
	qui lab var perc_var_`c' "Percent difference in land cover of class `c' between 2015 and 2021"
}
qui save "${gsdTemp}/landcover_change.dta", replace



**# Build dataset for MCDA
use "${gsdTemp}/sublocations_baringo.dta",clear 
rename OBJECTID_1 objectid_1
merge 1:1 objectid_1 using "${gsdTemp}/dem.dta", nogen assert(3) keep(3) keepusing(elevation) //merge average elevation
merge 1:1 objectid_1 using "${gsdTemp}/landcover_change.dta", nogen assert(3) keep(3) keepusing(perc_var_*) //change in land cover 2015-2021 as per dynamic world cover dataset
merge 1:1 objectid_1 using "${gsdTemp}/socioeconomic.dta", nogen keep(1 3) keepusing(mmx_svi_pca shape_area) //socio-economic indicators from the 2019 census
merge 1:1 objectid_1 using "${gsdTemp}/rain_shocks.dta", nogen keep(1 3) keepusing(n_sign_high_totprec_rs) assert(3) //number of rain shock events
merge 1:1 objectid_1 using "${gsdTemp}/new_permanentwater.dta", nogen keep(1 3) keepusing(new_perm_water_area) assert(3) //proportion of sublocation surface that is newly permanent waters

keep if inlist(objectid_1, 4649,	4694,	4695,	4696,	4697,	4698,	4699,	4700,	4701,	4702,	4703,	4704,	4705,	4706,	4707,	4708,	4709,	4710,	4711,	4714,	4715,	4716,	4717,	4718,	4719,	4720,	4721,	4722,	4728,	4729,	4730,	4751,	4752,	4771,	4772,	4773,	4774,	4805,	4806,	4807,	4808,	4809,	4810,	4811,	4812,	4813,	4864,	4867,	4868,	4872,	4873,	4880,	4881,	4889,	4890,	4891,	4892,	4893,	4899,	4900)
drop SLCODE MIN_DISTCO MIN_DIVCOD MIN_LOCCOD Growth_Rat Population HH_2009 Populati_1 HH2016 Shape_Leng Shape_Area County asset_index_pca
sleep 5000
************************************************************************************
**# Setup topsis on Baringo sublocations
************************************************************************************
gen newpermwat_shr=new_perm_water_area/area_sqkm
foreach v of varlist gensum mensum womensum reprwomensum under5sum youth1524sum over60sum {
	qui gen `v'_density=`v'/area_sqkm
}
lab var gensum "Total population"
lab var mensum "Total population (men)"
lab var womensum "Total population (women)"
lab var reprwomensum "Total population (women in reproductive age)"
lab var under5sum "Total population (under 5 years)"
lab var youth1524sum "Total population (15-24 years)"
lab var over60sum "Total population (60+ years)"
lab var gensum_density "Total population density"
lab var mensum_density "Total population density (men)"
lab var womensum_density "Total population density (women)"
lab var reprwomensum_density "Total population density (women in reproductive age)"
lab var under5sum_density "Total population density (under 5 years)"
lab var youth1524sum_density "Total population density (15-24 years)"
lab var over60sum_density "Total population density (60+ years)"

lab var hh_depshare "Dependency share"
lab var hhh_employed "Household head is employed"
lab var hhh_secondaryschl "Household head has secondary education"
lab var hhm_fishing "Number of household members in fishing activities"
lab var mmx_asset_index_pca "Asset score"
lab var mmx_telcom_score "Access to telecommunication score"
lab var mmx_fishing_importance "Importance of fishing activities score"
lab var mmx_number_cattle "Cattle ownership score"
lab var mmx_roof "Roof quality score"
lab var mmx_wall "Wall quality score"
lab var mmx_floor "Floor quality score"
lab var mmx_drinkwatersource "Drinking water quality score"
lab var mmx_toilettype "Toilet quality score"
lab var mmx_cookingfuel "Cooking fuel score"
lab var mmx_lightingfuel "Lighting fuel quality score"
lab var mmx_CENSUS_WEALTH_QUINTILE "Standardized monetary wealth quintile score"
lab var mmx_hdi_pca "Human development index score"
lab var n_sign_high_totprec_rs "Number of significantly higher rainy seasons in 2016-2022"
lab var newpermwat_shr "Proportion of sublocation area that is covered with newly permanent water"
lab var perc_var_water "Percent variation in water covered area (2022 vs 2015)"
*Spatially visualize variables
qui grmap, activate
grmap svi_pca, title("Baringo county", size(*0.8)) subtitle("Geographic distribution",size(*0.6))  fcolor(BuYlRd) legstyle(3) cln(9) legtitle(Variable) legenda(on) legend(ring(1) position(2))
qui save "${gsdOutput}/baringo_dataset_mcda.dta", replace 

use "${gsdOutput}/baringo_dataset_mcda.dta", clear 
**# Define the criteria to be fed into the analysis (grouped by thematic area)
global natural newpermwat_shr elevation //natural factors
global socioeconomic svi_pca //socioeconomic factors
mdesc objectid_1 $natural $socioeconomic
foreach v of varlist $natural $socioeconomic {
	//norm `v', method(mmx)
	//replace `v'=mmx_`v'
	replace `v'=0.0000001 if mi(`v') | `v'<0.0000001
}
qui export excel objectid_1 $natural $socioeconomic using "${gsdDo}/topsis_criteria_baringo.xlsx", replace firstrow(variables)
mata: setheader("${gsdDo}/topsis_criteria_baringo.xlsx", "Sheet1")

**# Import and store weights and impact parameters (as per discussion in excel reference table)
qui import excel "${gsdDo}\topsis_setup_baringo.xlsx", sheet("Sheet1") firstrow clear
rename (Impact Weight) (impact weight)
qui export excel impact using "${gsdDo}\topsis_impact_baringo.xlsx", firstrow(variables) replace //impacts (gains or costs)
mata: setheader("${gsdDo}\topsis_impact_baringo.xlsx", "Sheet1")
qui export excel weight using "${gsdDo}\topsis_weight_baringo.xlsx", firstrow(variables) replace //weights
mata: setheader("${gsdDo}\topsis_weight_baringo.xlsx", "Sheet1")

**# Run geotopsis
qui rsource using "${gsdDo}\topsis_baringo.R", roptions("--vanilla") rpath("C:/PROGRA~1/R/R-42~1.2/bin/x64/R")

**# Import the results of the geotopsis 
qui import excel "${gsdOutput}/topsisoutcome_baringo.xlsx", sheet("Sheet1") firstrow clear
rename score geotopsis_score
merge 1:1 objectid_1 using "${gsdOutput}/baringo_dataset_mcda.dta",  nogen keep(3) //assert(3)
keeporder _ID _CX _CY objectid_1 FIRST_PROV- over60sum_density geotopsis_score
norm geotopsis_score, method(mmx) //normalize topsis score (0 to 1)
xtile geotopsis_categories = mmx_geotopsis_score, nq(5) //create quartiles on normalized values

**# Visualize results on map
qui spset 
qui grmap, activate
grmap geotopsis_categories,  title("Geotopsis results", size(*0.8)) subtitle("Baringo sublocation",size(*0.6)) note("", size(*0.7)) fcolor(BuYlRd) legstyle(3) cln(5) legtitle(Normalized geotopsis quartile) legenda(on) legend(ring(1) position(2))
qui graph export "${gsdOutput}\topsis_baringo.jpg", as(jpg) name("Graph") quality(100) replace

**# Export attribute table, with codebook and the addition of the topsis score
lab var geotopsis_score "Geotopsis score"
lab var mmx_geotopsis_score "Normalized (0-1) Geotopsis score"
lab var geotopsis_categories "Normalized Geotopsis score quartiles"
qui iecodebook export using "${gsdOutput}/topsis_baringo.xlsx", replace 
qui export excel using "${gsdOutput}/topsis_baringo.xlsx", sheet("attribute_table") sheetreplace firstrow(variables)
import excel "${gsdOutput}/topsis_baringo.xlsx", sheet("survey") firstrow clear
qui export excel name label	type using "${gsdOutput}/topsis_baringo.xlsx", sheet("codebook") sheetreplace firstrow(variables)
import excel "${gsdOutput}/topsis_baringo.xlsx", sheet("attribute_table") firstrow clear
qui export excel using "${gsdOutput}/topsis_baringo.xlsx", sheet("attribute_table") sheetreplace firstrow(variables)
mata: setheader("${gsdOutput}/topsis_baringo.xlsx", "codebook")
mata: setheader("${gsdOutput}/topsis_baringo.xlsx", "attribute_table")
erase "${gsdOutput}/topsis_baringo.xlsx"

