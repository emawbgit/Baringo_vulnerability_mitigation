use "${gsdTemp}\hh_variables.dta", clear 
merge 1:m COUNTY subcounty_code divisionname_code locationname_code sublocation_code EA STRNUMBER HHNUMBER using "${gsdTemp}/sublocations_censusdata.dta",keepusing(hhsize) keep(3) nogen
duplicates drop COUNTY subcounty_code divisionname_code locationname_code sublocation_code EA STRNUMBER HHNUMBER, force 
gen survey=1
preserve 
use "${gsdDataRaw}\kchs 2021/consagg_microdata.dta", clear 
keep if resid==2 & county==30
merge 1:1 interview__key interview__id using "${gsdDataRaw}\kchs 2021/households_microdata.dta", keep(3) nogen
tempfile kchs_2021_hh
qui save `kchs_2021_hh', replace 
restore 
append using `kchs_2021_hh'
replace survey=2 if mi(survey)
lab def survey 1 "Census 2019" 2 "KCHS 2021"
lab val survey survey
*Electricity
replace e11=H38 if mi(e11) & !mi(H38)
gen electricity = cond(e11==1,1,0) if !mi(e11)
*Floor Type
drop floor
replace e6=H32 if mi(e6) & !mi(H32)
gen floor = 0 if inlist(e6,1,2,3,4,9,96) | mi(e6) //*1st Category = Earth/sand or Dung, Wood, bamboo, carpet or missing.
replace floor = 1 if inlist(e6,5,6,7,8) //2nd category (most permanent) parquet, Ceramic tiles & Concrete/ Cement/Terrazo
assert !mi(floor)
*Roof Type 
drop roof
replace e7=H30 if mi(e7) & !mi(H30)
gen roof = 0 if ( inlist(e7,1,2,4,5,8,96) | mi(e7)) //Grass, Dung, Tin cans, Canvas, Other or Missing
replace roof = 1 if inlist(e7,3,6,7) //Iron sheets, Concrete/Cement or tiles
replace roof=1 if mi(roof)
assert !mi(roof)
*Wall Type
drop wall
replace e8=H31 if mi(e8) & !mi(H31)
gen wall = 0 if inlist(e8,1,2,3,7,8,9,16,96) | mi(e8) //Least permanent structure = No walls, cane, grass, uncovered adobe, plywood, Reused wood, wood planks other or missing
replace wall = 1 if inlist( e8,4,5,6,10,15) //2nd category = mud, iron sheets, covered adobe
replace wall = 2 if inlist( e8, 11, 12, 13, 14,17) //3rd category = concrete, stone, bricks cement, precast
assert !mi(wall)
*Drinking water Type
replace e9=H33 if mi(e9) & !mi(H33)
gen dwater = 0 if inlist(e9,1,2,3,4,6,8,96) | mi(e9) //Pond, Dam, Lake, stream, Unprotected spring, Unprotected well, Other, Missing
replace dwater = 1 if inlist(e9,5,7,9,12,13,14,15) //Protected spring, Protected well, Borehole, Botteld water, Rain/harvested water, Water vendor, Public tap
replace dwater = 2 if inlist(e9,10,11) //Piped into dwelling, piped into yard
assert !mi(dwater)
*Toilet facility water Type
replace e10=H34 if mi(e10) & !mi(H34)
gen toilet = 0 if inlist(e10,6,7,8,96) | mi(e10) //uncovered latrine, bucket latrine, Open, other, missing
replace toilet = 1 if inlist(e10,4,5) //VIP latrine, Pit latrine covered
replace toilet = 2 if inlist(e10,1,2,3,10) //Any flush
replace toilet=1 if mi(toilet)
assert !mi(toilet)
*Cooking fuel
replace e12=H37 if mi(e12) & !mi(H37)
gen cfuel = 0 if inlist(e12,2,4,5,6,7,96) | mi(e12) //Paraffin, Biogas, Firewood, Charcoal, solar other and missing
replace cfuel = 1 if inlist(e12,1,3) //Electricity or gas
assert !mi(cfuel)
*Number of rooms (in log form)
replace e2=H28 if mi(e2) & !mi(H28)
gen lnrooms = ln(e2)
gen lnrooms_sq = (lnrooms)^2
assert !mi(hhsize)
*Evaluate model 
replace padqrent=adq_scale*padqrent //we want to impute the monthly value of a dwelling 
gen lnrent=ln(padqrent)
xi: vselect lnrent floor roof wall hhsize dwater toilet cfuel lnrooms lnrooms_sq electricity, forward aicc //select best model
qui predict lnrent_hat, xb
gen rent_imp=exp(lnrent_hat)
label var rent_imp "Imputed rent for all households"
tabstat padqrent rent_imp,by(county) s(min p50 max)
*For 2019 census households, impute the rent value of their dwelling based on the model estimated using 2021 KCHS.
gen hh_dwelling_value = cond(padqrent>0 & padqrent!=., padqrent, rent_imp)
gen hh_dwelling_value_y=hh_dwelling_value*12*10
replace hh_dwelling_value_y=hh_dwelling_value_y/$usd_ksh
tabstat hh_dwelling_value,by(county) s(min p50 max)
label var hh_dwelling_value "Value of household dwelling (1-year rent)"
drop if survey==2
collapse (sum) hh_dwelling_value_y (count) n_dwellings=rent_imp,by(objectid_1)
replace n_dwellings=10*n_dwellings //we have only 10% of the sample, hence multiply by 10
qui save "${gsdTemp}\benefit_dwelling_bysublocations.dta", replace 